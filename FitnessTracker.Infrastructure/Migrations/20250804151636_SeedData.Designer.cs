// <auto-generated />
using System;
using FitnessTracker.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FitnessTracker.Infrastructure.Migrations
{
    [DbContext(typeof(FitnessDbContext))]
    [Migration("20250804151636_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FitnessTracker.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime?>("RefreshTokenExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 1, 19, 25, 0, 0, DateTimeKind.Utc),
                            Email = "user1@gmail.com",
                            PasswordHash = "$2a$11$/HwV7ghcW26LoVIoqtepoOJykEiAW7orB4MjD6MtCDRMUX8IiFQGG"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 1, 19, 27, 0, 0, DateTimeKind.Utc),
                            Email = "user@gmail.com",
                            PasswordHash = "$2a$11$/HwV7ghcW26LoVIoqtepoOJykEiAW7orB4MjD6MtCDRMUX8IiFQGG"
                        });
                });

            modelBuilder.Entity("FitnessTracker.Domain.Entities.WorkoutEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CaloriesBurned")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<string>("ProgressPhotos")
                        .HasColumnType("jsonb");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("WorkoutDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CaloriesBurned = 320,
                            CreatedAt = new DateTime(2025, 8, 1, 19, 28, 0, 0, DateTimeKind.Utc),
                            Duration = new TimeSpan(0, 0, 45, 0, 0),
                            ProgressPhotos = "[]",
                            Title = "Morning Strength Training",
                            Type = 0,
                            UserId = 1,
                            WorkoutDate = new DateTime(2025, 8, 10, 19, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CaloriesBurned = 250,
                            CreatedAt = new DateTime(2025, 8, 1, 19, 29, 0, 0, DateTimeKind.Utc),
                            Duration = new TimeSpan(0, 0, 30, 0, 0),
                            ProgressPhotos = "[]",
                            Title = "Evening Cardio Session",
                            Type = 1,
                            UserId = 1,
                            WorkoutDate = new DateTime(2025, 8, 10, 18, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CaloriesBurned = 400,
                            CreatedAt = new DateTime(2025, 8, 1, 19, 30, 0, 0, DateTimeKind.Utc),
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            ProgressPhotos = "[]",
                            Title = "Full Body Workout",
                            Type = 0,
                            UserId = 2,
                            WorkoutDate = new DateTime(2025, 8, 10, 17, 30, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("FitnessTracker.Domain.Entities.WorkoutEntity", b =>
                {
                    b.HasOne("FitnessTracker.Domain.Entities.UserEntity", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("FitnessTracker.Domain.Entities.Exercise", "Exercises", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<int>("WorkoutId")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("WorkoutId");

                            b1.ToTable("Exercise");

                            b1.WithOwner()
                                .HasForeignKey("WorkoutId");

                            b1.OwnsMany("FitnessTracker.Domain.Entities.Set", "Sets", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<int>("ExerciseId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Reps")
                                        .HasColumnType("integer");

                                    b2.Property<double>("Weight")
                                        .HasColumnType("double precision");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ExerciseId");

                                    b2.ToTable("Set");

                                    b2.WithOwner()
                                        .HasForeignKey("ExerciseId");

                                    b2.HasData(
                                        new
                                        {
                                            Id = 1,
                                            ExerciseId = 1,
                                            Reps = 10,
                                            Weight = 60.0
                                        },
                                        new
                                        {
                                            Id = 2,
                                            ExerciseId = 1,
                                            Reps = 8,
                                            Weight = 70.0
                                        },
                                        new
                                        {
                                            Id = 3,
                                            ExerciseId = 1,
                                            Reps = 6,
                                            Weight = 80.0
                                        },
                                        new
                                        {
                                            Id = 4,
                                            ExerciseId = 2,
                                            Reps = 12,
                                            Weight = 50.0
                                        },
                                        new
                                        {
                                            Id = 5,
                                            ExerciseId = 2,
                                            Reps = 10,
                                            Weight = 60.0
                                        },
                                        new
                                        {
                                            Id = 6,
                                            ExerciseId = 2,
                                            Reps = 8,
                                            Weight = 70.0
                                        },
                                        new
                                        {
                                            Id = 7,
                                            ExerciseId = 3,
                                            Reps = 1,
                                            Weight = 0.0
                                        },
                                        new
                                        {
                                            Id = 8,
                                            ExerciseId = 4,
                                            Reps = 8,
                                            Weight = 80.0
                                        },
                                        new
                                        {
                                            Id = 9,
                                            ExerciseId = 4,
                                            Reps = 6,
                                            Weight = 90.0
                                        },
                                        new
                                        {
                                            Id = 10,
                                            ExerciseId = 4,
                                            Reps = 4,
                                            Weight = 100.0
                                        },
                                        new
                                        {
                                            Id = 11,
                                            ExerciseId = 5,
                                            Reps = 8,
                                            Weight = 0.0
                                        },
                                        new
                                        {
                                            Id = 12,
                                            ExerciseId = 5,
                                            Reps = 6,
                                            Weight = 0.0
                                        },
                                        new
                                        {
                                            Id = 13,
                                            ExerciseId = 5,
                                            Reps = 5,
                                            Weight = 0.0
                                        });
                                });

                            b1.Navigation("Sets");

                            b1.HasData(
                                new
                                {
                                    Id = 1,
                                    Name = "Bench Press",
                                    WorkoutId = 1
                                },
                                new
                                {
                                    Id = 2,
                                    Name = "Squats",
                                    WorkoutId = 1
                                },
                                new
                                {
                                    Id = 3,
                                    Name = "Running",
                                    WorkoutId = 2
                                },
                                new
                                {
                                    Id = 4,
                                    Name = "Deadlifts",
                                    WorkoutId = 3
                                },
                                new
                                {
                                    Id = 5,
                                    Name = "Pull-ups",
                                    WorkoutId = 3
                                });
                        });

                    b.Navigation("Exercises");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessTracker.Domain.Entities.UserEntity", b =>
                {
                    b.Navigation("Workouts");
                });
#pragma warning restore 612, 618
        }
    }
}
